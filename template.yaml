# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Functionless URL Shortner

Parameters:
  AppName:
    Type: String
    Description: Name of application (no spaces)
    Default: shortener
  ClientDomain:
    Type: String
    Description: The default domain to redirect to if URL not found.
    Default: http://localhost:8080
  AddCache:
    Type: String
    Description: Enable Caching ( true | false )
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
  AddAccessLogging:
    Type: String
    Description: Enable access logging to S3 via firehose ( true | false )
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'

Conditions:
  AddCache: { "Fn::Equals" : [{"Ref" : "AddCache"}, "true"]}
  AddLogging: { "Fn::Equals" : [{"Ref" : "AddAccessLogging"}, "true"]}

Resources:
  ###################################################################################################
  ##   API Configuration                                                                           ##
  ###################################################################################################
  SiteAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      AccessLogSetting:
        DestinationArn: !If [ AddLogging, !GetAtt LogFireHose.Arn, !Ref "AWS::NoValue" ]
        Format: !If [ AddLogging, '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp", "caller":"$context.identity.caller", "user":"$context.identity.user","requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod","resourcePath":"$context.resourcePath", "status":"$context.status","protocol":"$context.protocol", "responseLength":"$context.responseLength" }', !Ref "AWS::NoValue" ]
      CacheClusterEnabled: !If [ AddCache, true, false]
      CacheClusterSize: !If [ AddCache, "0.5", !Ref "AWS::NoValue" ]
      MethodSettings:
        - HttpMethod: "*"
          ResourcePath: "/*"
          CacheTtlInSeconds: !If [ AddCache, 300, !Ref "AWS::NoValue" ]
          CachingEnabled: !If [ AddCache, true, false ]
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: './api.yaml'

  ###################################################################################################
  ##   URL Table                                                                                   ##
  ###################################################################################################
  LinkTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: owner
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: OwnerIndex
          KeySchema:
            - AttributeName: owner
              KeyType: HASH
          Projection:
            ProjectionType: ALL
  
  ###################################################################################################
  ##   Dynamo DB Read Policy                                                                       ##
  ###################################################################################################
  DDBReadRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "apigateway.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: DDBReadPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Action:
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              Effect: Allow
              Resource:
                - !GetAtt LinkTable.Arn
                - !Sub
                  - ${TableArn}/index/*
                  - {TableArn: !GetAtt LinkTable.Arn}

  ###################################################################################################
  ##   Dynamo DB Read/Write Policy                                                                 ##
  ###################################################################################################
  DDBCrudRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "apigateway.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: DDBCrudPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Action:
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:UpdateItem
              Effect: Allow
              Resource: !GetAtt LinkTable.Arn

  ###################################################################################################
  ##   S3 Bucket Write Policy                                                                      ##
  ###################################################################################################
  S3BucketWrite:
    Type: "AWS::IAM::Role"
    Condition: AddLogging
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "firehose.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      Policies:
        - PolicyName: S3WritePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              Action:
                - s3:PutObject
              Effect: Allow
              Resource:
                - !GetAtt LogBucket.Arn
                - !Sub
                  - ${Arn}/*
                  - {Arn: !GetAtt LogBucket.Arn}

  ###################################################################################################
  ##   Cognito user pool                                                                           ##
  ###################################################################################################
  UserPool:
    Type: AWS::Cognito::UserPool 
    Properties: 
      UserPoolName: !Sub ${AppName}-UserPool 
      Policies: 
        PasswordPolicy: 
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      UsernameAttributes: 
        - email 
      Schema: 
        - AttributeDataType: String 
          Name: email 
          Required: false

  ###################################################################################################
  ##   Cognito user pool domain                                                                    ##
  ###################################################################################################
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Ref AppName
      UserPoolId: !Ref UserPool

  ###################################################################################################
  ##   Cognito user pool client                                                                    ##
  ###################################################################################################
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient 
    Properties: 
      UserPoolId: !Ref UserPool 
      ClientName: !Sub ${AppName}-UserPoolClient 
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - !Ref ClientDomain
      LogoutURLs:
        - !Ref ClientDomain
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid

  ###################################################################################################
  ##   S3 Bucket for optional logging                                                              ##
  ###################################################################################################
  LogBucket:
    Type: AWS::S3::Bucket   
    Condition: AddLogging

  ###################################################################################################
  ##   Kinesis Firehose for optional logging                                                       ##
  ###################################################################################################
  LogFireHose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Condition: AddLogging
    Properties:
      DeliveryStreamName: !Sub amazon-apigateway-${AppName}
      S3DestinationConfiguration:
        BucketARN: !GetAtt LogBucket.Arn
        CompressionFormat: GZIP
        RoleARN: !GetAtt S3BucketWrite.Arn
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 1


###################################################################################################
##   Template outputs                                                                            ##
###################################################################################################
Outputs:
  VueAppName:
    Description: (VUE_APP_NAME) Name of your application
    Value: !Ref AppName

  VueAppAPIRoot:
    Description: (VUE_APP_API_ROOT) API Gateway endpoint URL for linker
    Value: !Sub https://${SiteAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod
 
  VueAppAuthDomain: 
    Description: (VUE_APP_AUTH_DOMAIN) Domain used for authentication
    Value: !Sub https://${AppName}.auth.${AWS::Region}.amazoncognito.com

  VueAppClientId: 
    Description: (VUE_APP_CLIENT_ID) Cognito User Pool Client Id
    Value: !Ref UserPoolClient